<launch>	
	
	<arg name="simul" default="false"/>
	<arg name="simul_pcl" default="false"/>
        <arg name="hostname" default="192.168.0.11" />
<arg name="tf_prefix" default="no_prefix"/>
  <arg name="use_tf_prefix" default="false" />
  
  <param name="robot_description" textfile="$(find robotino_description)/urdf/robotino.urdf" />
 
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
  	<param name="publish_frequency" type="double" value="20.0" />
        <param name="tf_prefix" value="$(arg tf_prefix)" if="$(arg use_tf_prefix)"/>
  </node>
  <node pkg="tf" type="static_transform_publisher" name="laser_camera_broadcaster" args="0.0 0 0.0 0 0 0 laser_link camera_depth_frame 50" unless="$(arg use_tf_prefix)" />
  <node pkg="tf" type="static_transform_publisher" name="laser_camera_broadcaster" args="0.0 0 0.0 0 0 0 $(arg tf_prefix)/laser_link $(arg tf_prefix)/camera_depth_frame 50" if="$(arg use_tf_prefix)" />
  <node pkg="tf" type="static_transform_publisher" name="base_laser_broadcaster_from_launch_file" args="0.13 0 0.05 0 0 0 base_link laser_link 100" unless="$(arg use_tf_prefix)"/>
  <node pkg="tf" type="static_transform_publisher" name="base_laser_broadcaster_from_launch_file" args="0.13 0 0.05 0 0 0 $(arg tf_prefix)/base_link $(arg tf_prefix)/laser_link 100" if="$(arg use_tf_prefix)"/>

  <node name="robotino_node" pkg="robotino_base" type="robotino_node" output="screen">
        <param name="hostname" value="$(arg hostname)" />
        <param name="max_linear_vel" value="1.0" />
        <param name="min_linear_vel" value="0.01" />
        <param name="max_angular_vel" value="1.0" />
        <param name="min_angular_vel" value="0.01" />
        <param name="ns_room_id" value="3" />
        <param name="ns_ceil_height" value="3.0" />
        <param name="tf_prefix" value="$(arg tf_prefix)" />
        <remap from="robotino_joint_states" to="joint_states" />
	<remap from="/cmd_vel" to="/hardware/mobile_base/cmd_vel"/>
        <!--remap from="image_raw" to="image"/-->
    </node>

    <node name="robotino_laserrangefinder_node" pkg="robotino_base" type="robotino_laserrangefinder_node" output="screen">
        <param name="hostname" value="$(arg hostname)" />
        <param name="laserRangeFinderNumber" value="0" />
        <param name="tf_prefix" value="$(arg tf_prefix)" />
	<remap from="/scan" to="/hardware/scan"/>
    </node>

    <node name="robotino_odometry_node" pkg="robotino_base" type="robotino_odometry_node" output="screen">
        <param name="hostname" value="$(arg hostname)" />
        <param name="tf_prefix" value="$(arg tf_prefix)" />
    </node>



	<group ns="hardware">
		<!-- Nodes to the real justina robot -->




		#<node name="joy" pkg="joy" type="joy_node" output="screen"/>

	</group>
<group ns="hri">
                <node name="rviz" pkg="rviz" type="rviz" args="-d $(find knowledge)/hri/rviz_config.rviz"/>
                <!-- node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen"
                        args="-p $(find knowledge)/navigation/"/ -->
                <node name="jrviz" pkg="jrviz" type="jrviz_node" args="-d $(find knowledge)/hri/rviz_config.rviz -p $(find knowledge)/navigation/ -dv $(find knowledge)/hri/rviz_config_nav.rviz" output="screen"/>
		<node name="leg_finder" pkg="leg_finder" type="leg_finder_node" args="--hyp" output="screen"/>
		<node name="human_follower" pkg="human_follower" type="human_follower_node" args="--move_head" output="screen"/>
	</group>

	<group ns="interoperation">
		<node name="joystick_teleop" pkg="joystick_teleop" type="joystick_logitech.py" output="screen" />
	</group>
	<node name="gmapping" pkg="gmapping" type="slam_gmapping" args="scan:=/hardware/scan" output="screen">
		<param name="map_update_interval" value="1.0" />
		<param name="maxUrange" value="5.4"/>
		<param name="linearUpdate" value="0.3"/>

		<param name="angularUpdate" value="0.2"/>
		<param name="xmin" value="-50"/>
		<param name="ymin" value="-20"/>
		<param name="xmax" value="50"/>
		<param name="ymax" value="20"/>
		<param name="maxRange" value="5.5"/>
		<param name="minimumScore" value="0.0"/>
	</node>
</launch>
